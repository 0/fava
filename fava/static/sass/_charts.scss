// Chartist

@import "~chartist/dist/scss/chartist";

.charts {
    min-height: 25px;

    .ct-label {
        font-size: 11px;
        font-weight: bold;
    }

    .chart-labels {
        color: rgba($color_text, 0.2);
        font-size: 11px;
        line-height: 14px;
        font-weight: bold;
        text-align: center;
        margin-bottom: 20px;
        position: relative;
        margin-top: 8px;

        label {
            color: rgba($color_text, 0.3);
            padding: 0 5px;

            &:hover {
                text-decoration: underline;
                color: rgba($color_text, 0.4);
                cursor: pointer;
            }

            &.selected { color: rgba($color_text, 0.5); }
        }

        label+label { border-left: 1px solid rgba($color_text, 0.4) }
    }

    .chart-container {
        clear:right;
        position: relative;
        height: 240px;

    }

    .chart-no-data div,
    .loading {
        padding-top: 100px;
        text-align: center;
        font-style: italic;
        color: lighten($color_text, 60);
    }

    .ct-bar { cursor: pointer; }

    .ct-legend {
        float: left;
        position: absolute;
        z-index: 6;
        top: 0;
        left: 0;

        li {
            position: relative;
            padding-left: 20px;
            margin-bottom: 3px;
            cursor: pointer;

            &:before {
                width: 8px;
                height: 7px;
                position: absolute;
                left: 0;
                content: '';
                border: 3px solid transparent;
                top: -1px;
            }

            &.inactive:before { background: transparent; }
        }

        &.ct-legend-inside {
            position: absolute;
            top: 0;
            right: 0;
        }

        @for $i from 0 to length($ct-series-colors) {
            .ct-series-#{$i}:before {
                background-color: nth($ct-series-colors, $i + 1);
                border-color: nth($ct-series-colors, $i + 1);
            }
        }
    }

    .ct-zoom-rect {
        fill: rgba(200, 200, 200, 0.3);
        stroke: #666;
    }
}

.chartist-tooltip {
    font-family: $font_family_monospaced;
    font-size: 13px;
    position: absolute;
    display: inline-block;
    opacity: 0;
    min-width: 5em;
    padding: .5em;
    background: darken($color_background, 5);
    border: 1px solid #CCC;
    box-shadow: 0px 0px 5px darken($color_background, 6);
    text-align: center;
    pointer-events: none;
    z-index: 1;
    -webkit-transition: opacity .2s linear;
    -moz-transition: opacity .2s linear;
    -o-transition: opacity .2s linear;
    transition: opacity .2s linear;

    &:before {
        content: "";
        position: absolute;
        top: 100%;
        left: 50%;
        width: 0;
        height: 0;
        margin-left: -15px;
        border: 15px solid transparent;
        border-top-color: darken($color_background, 20);
    }

    &.tooltip-show { opacity: 1; }

    em {
        font-family: $font_family;
        font-size: 0.9em;
        display: block;
        margin-top: 5px;
        color: darken($color_background, 50);
    }
}

// Treemaps

.treemap-node .treemap-label {
    z-index: 8;

    a {
        color: $color_treemap_text;

        &:hover { text-decoration: underline; }
    }
}

#treemap-popover {
    z-index: 12;
    position: absolute;
    background: darken($color_background, 5);
    border: 1px solid darken($color_background, 20);
    box-shadow: 0px 0px 5px darken($color_background, 6);
    padding: 10px 5px 0 15px;

    &:before {
        content: "";
        position: absolute;
        top: 100%;
        left: 50%;
        width: 0;
        height: 0;
        margin-left: -15px;
        border: 15px solid transparent;
        border-top-color: darken($color_background, 20);
    }

    dl {
        margin-top: 0;
        min-width: 270px;
    }

    dt { width: 60px; }

    dd { margin-bottom: 8px; }

    dd code {
        font-size: 13px;
        line-height: 1em;
    }
}
