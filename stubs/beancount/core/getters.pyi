# pylint: disable=all
# flake8: noqa
from typing import Any
from typing import List
from typing import Optional

from beancount.core import account as account
from beancount.core import data as data
from beancount.core.data import Balance as Balance
from beancount.core.data import Close as Close
from beancount.core.data import Commodity as Commodity
from beancount.core.data import Open as Open
from beancount.core.data import Price as Price
from beancount.core.data import Transaction as Transaction

class GetAccounts:
    def get_accounts_use_map(self, entries: Any): ...
    def get_entry_accounts(self, entry: Any): ...
    def Transaction(_: Any, entry: Any) -> None: ...
    def Pad(_: Any, entry: Any): ...
    Open: Any = ...
    Close: Any = ...
    Balance: Any = ...
    Note: Any = ...
    Document: Any = ...
    Commodity: Any = ...
    Event: Any = ...
    Query: Any = ...
    Price: Any = ...
    Custom: Any = ...

def get_accounts_use_map(entries: Any): ...
def get_accounts(entries: Any): ...
def get_entry_accounts(entry: Any): ...
def get_account_components(entries: Any): ...
def get_all_tags(entries: Any): ...
def get_all_payees(entries: Any): ...
def get_all_links(entries: Any): ...
def get_leveln_parent_accounts(
    account_names: Any, level: Any, nrepeats: int = ...
): ...
def get_dict_accounts(account_names: Any): ...
def get_min_max_dates(entries: Any, types: Optional[Any] = ...): ...
def get_active_years(entries: Any) -> List[str]: ...
def get_account_open_close(entries: Any): ...
def get_commodity_map(entries: Any, create_missing: bool = ...): ...
def get_values_meta(
    name_to_entries_map: Any, *meta_keys: Any, default: Optional[Any] = ...
): ...
